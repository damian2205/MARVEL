{"version":3,"sources":["components/bLogin.js","components/bRegistro.js","services/apis.js","users/Login.js","users/Registro.js","api/home.js","api/personajes.js","api/comics.js","api/series.js","api/fechas.js","api/marvel.js","components/marvel.jsx","marvelStore.js","components/vistas.js","App.js","index.js"],"names":["require","Home","className","type","Component","Apis","addUsers","bind","getUser","axios","get","data","post","React","Logins","state","usuario","password","usuarios","handleSubmit","validateUser","apis","then","response","this","alert","i","length","props","history","push","e","llave","setState","target","value","event","preventDefault","id","placeholder","onChange","handleChange","onClick","withRouter","Registros","nombre","password_","cositas","key","console","log","userss","expresion","test","dataa","to","path","Login","Registro","APIM","getSeries","getImagen","fetchMarvel","ts","Date","now","publicKey","hash","md5","URL","fetch","res","json","datos","results","map","row","label","name","imagen","thumbnail","catch","err","error","series_char","T","r","title","descripcion","description","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","href","options","content","src","alt","comics","dataComic","getComics","fechas_comics","componentDidMount","comicsMarvel","URL1","Mcomic","dates","fechas","comic_char","getChar","c","getCharComics","Series","seriesM","char_series","comic_series","series","seriesapi","series_","q","o","p","comicSeriess","getCharSeries","comicSeries","date","ok","api_marvel","Marvel","personajes","llamado","heroes","connect","datas","dispatch","agregarFavorito","initialState","a","marvel","createStore","action","App","store","marvelStore","exact","render","document","getElementById"],"mappings":"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","file":"static/js/main.9ea1239d.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nrequire('../css/home.css');\r\n\r\n\r\nexport default class Home extends Component{\r\n    render(){\r\n        return(\r\n            <button className=\"boton1\" type=\"submit\" ><b>Login</b></button>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nrequire('../css/home.css');\r\n\r\n\r\nexport default class Home extends Component{\r\n    render(){\r\n        return(\r\n            <button className=\"boton\" type=\"submit\" ><b>Registro</b></button>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default class Apis extends React.Component{\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.addUsers = this.addUsers.bind(this);\r\n        this.getUser = this.getUser.bind(this);\r\n    }\r\n\r\n    async getUser(){\r\n        return await axios.get(\"/users\");\r\n    }\r\n\r\n    //Funcion addUser: guardado de usuario en MongoDb.\r\n    //Parametro: data, datos del usuario en formato JSON\r\n    async addUsers(data){\r\n        return await axios.post(\"/users/signup\", data)\r\n    }\r\n}\r\n\r\n// export default new (Apis);","import React from 'react';\r\nimport Apis from '../services/apis';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nrequire('../css/login.css')\r\n\r\n\r\nclass Logins extends React.Component{\r\n    \r\n\r\n    constructor(){\r\n        \r\n        super();\r\n        this.state = {\r\n            usuario: '',\r\n            password: '',\r\n            usuarios: []\r\n        }\r\n        \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.validateUser = this.validateUser.bind(this);\r\n    }\r\n    \r\n    // Funcion de traer datos de la DB\r\n    async validateUser (){\r\n        var apis = new Apis();\r\n        const usuarios = await apis.getUser().then(response => {return response.data});\r\n       \r\n        // console.log(\"usuarios de DB\", usuarios);\r\n\r\n        // Validacion para ingresar \r\n        var validate = (this.state.usuario === \"\", this.state.password === \"\");\r\n        if (validate === true) {                    \r\n            alert(\"Campos Obligatorios¡¡\");\r\n        }else{\r\n        for(var i=0; i < usuarios.length ; i++){\r\n            if((usuarios[i].password === this.state.password) && (usuarios[i].usuario === this.state.usuario)){\r\n                alert(\"Usuario Logeado\");\r\n                this.props.history.push('/heroes'); //Redireccionamiento\r\n                break;\r\n            }\r\n            else{\r\n                if (i === usuarios.length-1 ) {\r\n                    alert(\"usuario invalido\");\r\n                }\r\n            }\r\n        }\r\n        }\r\n        \r\n    }\r\n\r\n    // Guardado de valores para login\r\n    handleChange(e, llave){\r\n        this.setState({\r\n            [llave]: e.target.value\r\n        });\r\n    }\r\n\r\n    //Evento de validacion\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        this.validateUser();\r\n        \r\n        \r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"row\">\r\n            <div className=\"col-md-4 mx-auto\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                        <center className=\"name\"><h1><b>Login Usuario</b></h1></center>\r\n                        <div className=\"card-body\">\r\n                            <form id=\"formulario\">\r\n                                <div className=\"form-group\">\r\n                                    <input className=\"usuario\" type=\"text\" id=\"usuario\" placeholder=\"Usuario\" value={this.state.usuario} onChange={e => this.handleChange(e, \"usuario\")}></input>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input className=\"password\" type=\"password\" id=\"password\" placeholder=\"Contraseña\" value={this.state.password} onChange={e => this.handleChange(e, \"password\")}></input>\r\n                                </div>\r\n                                <center><button className=\"login\" type=\"submit\" value=\"Submit\" onClick={this.handleSubmit} >Login </button></center>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Logins);          // Exportacion con modulo de redireccionamiento","import React from 'react';\r\nimport Apis from '../services/apis.js';\r\nimport {withRouter} from 'react-router-dom';\r\nrequire('../css/registro.css');\r\n\r\nclass Registros extends React.Component{\r\n    \r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            usuario: '',\r\n            nombre: '',\r\n            password: '',\r\n            password_: ''\r\n        }  \r\n\r\n        this.data = {\r\n            cositas: []\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.validateUser = this.validateUser.bind(this);\r\n        // this.Users = this.addUsers;\r\n        // this.getUsers = this.getUsers.bind(this);\r\n    }\r\n\r\n    // Almacenamiento de valores de registro\r\n    handleChange(e, key){\r\n        // console.log(\"value user =\", this.state.usuario, this.state.nombre, this.state.password, this.state.password_);\r\n        this.setState({\r\n            [key]: e.target.value\r\n            }); \r\n    // onChange={this.handleChange}\r\n    }\r\n    \r\n    \r\n    /// Validacion de usuario e ingresos de datos a la DB\r\n    async validateUser (){\r\n        console.log(\"entro\")\r\n        var apis = new Apis();\r\n        const userss = await apis.getUser().then(response => {return response.data});\r\n       \r\n        //Validacion de usuario ya registrado\r\n        for(var i=0; i < userss.length ; i++){\r\n            if((userss[i].usuario === this.state.usuario)){             \r\n                console.log(\"Validacion.usuario\", userss[i].usuario);\r\n                alert(\"Usuario ya registrado¡¡¡\");\r\n            }\r\n        }\r\n\r\n        //Validaion de campos\r\n        const expresion = /^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/;\r\n        const validate = (this.state.usuario === \"\", this.state.nombre === \"\", this.state.password === \"\", this.state.password_ === \"\");\r\n        if (validate === true) {                    \r\n            alert(\"Campos Obligatorios¡¡\");\r\n        }else    \r\n        if(this.state.password !== this.state.password_){          \r\n            alert(\"Constraseñas no coinciden verifique por favor\");\r\n        }else \r\n        if(!expresion.test(this.state.password, this.state.password_)){\r\n                    alert(\"La contraseña debe tener al entre 8 y 16 caracteres, al menos un dígito, al menos una minúscula y al menos una mayúscula. NO puede tener otros símbolos.\");\r\n        }else{\r\n        let dataa = await apis.addUsers(this.state).then(response => {return response.data});\r\n        console.log(dataa);\r\n        alert(dataa);\r\n        this.props.history.push('/login');   /// Redireccionamiento \r\n        }\r\n    }\r\n\r\n\r\n        // Funcion de ejecucion \r\n    handleSubmit(e){\r\n\r\n        //Llamado de funciones\r\n        e.preventDefault();\r\n        this.validateUser();\r\n\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <section>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4 mx-auto\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                <center className=\"name\"><h1><b>Registro Usuario</b></h1></center>\r\n                                <div className=\"card-body\">\r\n                                    <form id=\"formulario\">\r\n                                        <div className=\"form-group\">\r\n                                            <input className=\"usuario\" type=\"text\" id=\"usuario\" placeholder=\"Usuario\" value={this.state.usuario} onChange={e => this.handleChange(e, \"usuario\")} ></input>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <input className=\"nombre\" type=\"text\" id=\"nombre\"  placeholder=\"Nombre\" value={this.state.nombre} onChange={e => this.handleChange(e, \"nombre\")}></input>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <input className=\"password\" type=\"password\" id=\"password\" placeholder=\"Constraseña\" value={this.state.password} onChange={e => this.handleChange(e, \"password\")}></input>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <input className=\"password1\" type=\"password\" id=\"password_\" placeholder=\"Confirmar constraseña\" value={this.state.password_} onChange={e => this.handleChange(e, \"password_\")}></input>\r\n                                        </div>\r\n                                        <center><button className=\"registro\" type=\"submit\" value=\"Submit\" onClick={this.handleSubmit}> Registrar </button></center>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Registros);   // Exportacion con modulo de redireccionamiento","import React, {Component} from 'react';\r\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom';\r\nimport BLogin from '../components/bLogin';\r\nimport BRegistro from '../components/bRegistro';\r\nimport Login from '../users/Login';\r\nimport Registro from '../users/Registro';\r\n// import Personajes from '../api/personajes';\r\n// import Comics from '../api/comics';\r\n// import Series from '../api/series';\r\n// import Heroes from '../api/heroes';\r\n// import Fechas from '../api/fechas';\r\nrequire('../css/home.css');\r\n// require('../App');\r\n\r\n\r\nexport default class Home extends Component{\r\n    render(){\r\n        return(\r\n            <section>\r\n                <div className=\"imagen\"></div>\r\n                <Router>\r\n                    <div>\r\n                    {/* <button className=\"boton1\" type=\"submit\" ><b>Login</b></button>\r\n                    <button className=\"boton\" type=\"submit\" ><b>Registro</b></button> */}\r\n                        <Link to=\"/login\"><BLogin/></Link>\r\n                        <Link to=\"/registro\"><BRegistro/></Link>\r\n                        {/* <Link to=\"/personajes\"></Link>\r\n                        <Link to=\"/heroes\"></Link>\r\n                        <Link to=\"/comics\"></Link>\r\n                        <Link to=\"/series\"></Link>\r\n                        <Link to=\"/fechas\"></Link>\r\n                        <Switch>\r\n                        <Route exact path=\"/\"></Route>\r\n\r\n                        <Route path=\"/login\">\r\n                            <Login/>\r\n                        </Route>\r\n                        <Route path=\"/registro\">\r\n                            <Registro/>\r\n                        </Route>\r\n                        <Route path=\"/personajes\">\r\n                            <Personajes/>\r\n                        </Route>\r\n                        <Route path=\"/comics\">\r\n                          <Comics/>\r\n                        </Route>\r\n                        <Route path=\"/series\">\r\n                          <Series/>\r\n                        </Route>\r\n                        <Route path=\"/heroes\">\r\n                          <Heroes/>\r\n                        </Route>\r\n                        <Route path=\"/fechas\">\r\n                            <Fechas/>\r\n                        </Route>\r\n                         </Switch> */}\r\n                            <Route path=\"/login\">\r\n                                <Login/>\r\n                            </Route>\r\n                            <Route path=\"/registro\">\r\n                                <Registro/>\r\n                            </Route>\r\n                    </div>\r\n                </Router>\r\n            </section>\r\n            \r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport md5 from 'md5';\r\nimport Select from 'react-select';\r\nrequire('../css/api.css');\r\n\r\n\r\nexport default class APIM extends Component{\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      data: [],         //Estado de los personajes\r\n      getSeries: [],         //Estado de series por personaje\r\n      getImagen: [],\r\n    }          \r\n  }\r\n\r\n  componentDidMount(){\r\n      this.fetchMarvel();\r\n      // this.imagenPersonajes();\r\n  }\r\n\r\n  // Llamado a personajes de la API de Marvel\r\n  async fetchMarvel(){\r\n    // // Consumo de API DE MARVEL\r\n    var ts = Date.now();   // Dato de la fecha.\r\n    const privateKey = 'b05d8a26db8acc6f48d50c93824ff00a19c5cb61',     // PrivateKey asignada por la pagina de Mavel\r\n          publicKey = 'f97f541a27560153f37504b1f5078573';             // PrivateKey asignada por la pagina de Mavel\r\n\r\n    // Encriptacion de keys\r\n    const hash = md5(ts+privateKey+publicKey),\r\n          URL = (`http://gateway.marvel.com/v1/public/characters?ts=${ts}&apikey=${publicKey}&hash=${hash}&limit=100`);\r\n\r\n      /* EndPoint MARVEL, configuraciones necesarias para los llamados \r\n        HASH = 2fd6719e46e5238b2a411bc3e541eefd \r\n        ts = 1580325822661\r\n        Public KEY = f97f541a27560153f37504b1f5078573  \r\n        http://gateway.marvel.com/v1/public/characters?ts=1580325822661&apikey=f97f541a27560153f37504b1f5078573&hash=2fd6719e46e5238b2a411bc3e541eefd */\r\n      // console.log(ts);\r\n      // console.log(hash);\r\n      // console.log(URL); */\r\n\r\n      // API de los personajes de Marvel\r\n      await fetch(URL)\r\n        .then(res => res.json())\r\n        .then(datos => {\r\n          console.log(\"Personajes\", datos);\r\n          const i = datos.data.results.map(row =>{\r\n            return {value: row.id, label: row.name, imagen: row.thumbnail.path+'/portrait_xlarge.jpg',}\r\n          })\r\n          this.setState({data: i});\r\n          // console.log(this.state.data)\r\n        })\r\n        .catch(err => console.error(\"Ha ocurrido un error con los characters\", err));  \r\n  }\r\n  // Llamado de series por personajes\r\n  getSeries(i){\r\n    console.log(i)\r\n    var ts = Date.now();   // Dato de la fecha.\r\n    const privateKey = 'b05d8a26db8acc6f48d50c93824ff00a19c5cb61',     // PrivateKey asignada por la pagina de Mavel\r\n          publicKey = 'f97f541a27560153f37504b1f5078573';              // PrivateKey asignada por la pagina de Mavel\r\n      \r\n    const hash = md5(ts+privateKey+publicKey);\r\n      var id = i.value;\r\n      const series_char = (`http://gateway.marvel.com/v1/public/characters/${id}/series?ts=${ts}&apikey=${publicKey}&hash=${hash}&limit=100`);\r\n\r\n            fetch(series_char)\r\n              .then(res => res.json())\r\n              .then(T =>{\r\n                console.log(T)\r\n                const r = T.data.results.map((res)=>{\r\n                  return {value: res.id, label: res.title, imagen: res.thumbnail.path+'/portrait_xlarge.jpg', descripcion: res.description}\r\n                })\r\n                // console.log(\"Series por personaje\", T.data.results)\r\n                this.setState({getSeries: r})\r\n              });\r\n  }\r\n\r\n\r\n\r\n      render(){\r\n        // console.log(\"comics\", this.state.fechas_comics);\r\n        return(\r\n          <>\r\n          <div className=\"dropdown\">\r\n                <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                  MARVEL\r\n                </button>\r\n                <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                  <a className=\"dropdown-item\" href=\"/heroes\">Heroes</a>\r\n                  <a className=\"dropdown-item\" href=\"/personajes\">Personajes</a>\r\n                  <a className=\"dropdown-item\" href=\"/comics\">Comics</a>\r\n                  <a className=\"dropdown-item\" href=\"/series\">Series</a>\r\n                  <a className=\"dropdown-item\" href=\"/fechas\">Fechas</a>\r\n                </div>\r\n              </div>\r\n          <center><h1> PERSONAJES DE MARVEL </h1></center>\r\n            \r\n          <section>\r\n             <Select\r\n              placeholder=\"Lista de personajes\"\r\n              onChange={i=>{\r\n                this.getSeries(i)\r\n                }}\r\n              options={this.state.data}\r\n              />\r\n            <div>\r\n              <h1> Series por personajes </h1>\r\n                {this.state.getSeries.map((content) => {\r\n                return <div className=\"row\">\r\n                <div className=\"col-md-4 mx-auto\">\r\n                    <div className=\"card__\">\r\n                        <div className=\"card-header\">\r\n                                <center className=\"name\"><h1><b>{content.label}</b></h1></center>\r\n                            <div className=\"card-body\">\r\n                                <center><img src={content.imagen} alt=\"...\"/></center>\r\n                                <p>{content.descripcion}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n              })}\r\n            </div>\r\n          </section>\r\n          </>\r\n        )\r\n      }\r\n}","import React, {Component} from 'react';\r\nimport md5 from 'md5';\r\nimport Select from 'react-select';\r\nrequire('../css/api.css');\r\n\r\nexport default class comics extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n          dataComic: [],        //Estado de los comics\r\n          getComics: [],        //Estado de los characters de los comics\r\n          fechas_comics: [],    //Estado de fechas de comics por salir \r\n        }          \r\n    \r\n        this.componentDidMount = this.componentDidMount.bind(this);\r\n        this.comicsMarvel = this.comicsMarvel.bind(this);    \r\n      }\r\n\r\n      componentDidMount(){\r\n          this.comicsMarvel();\r\n    }\r\n\r\n// Llamado de api para los comics\r\nasync comicsMarvel(){\r\n    var ts = Date.now();   // Dato de la fecha.\r\n    const privateKey = 'b05d8a26db8acc6f48d50c93824ff00a19c5cb61',     // PrivateKey asignada por la pagina de Mavel\r\n          publicKey = 'f97f541a27560153f37504b1f5078573';              // PrivateKey asignada por la pagina de Mavel\r\n      \r\n    const hash = md5(ts+privateKey+publicKey),\r\n          URL1 = (`http://gateway.marvel.com/v1/public/comics?ts=${ts}&apikey=${publicKey}&hash=${hash}&limit=100`);\r\n\r\n      await fetch(URL1)\r\n        .then(res => res.json())\r\n        .then(Mcomic => {\r\n          // console.log(\"datess\", Mcomic);\r\n          const i = Mcomic.data.results.map(row =>{\r\n            return {value: row.id, label: row.title, dates: row.dates}\r\n          })\r\n          // const q = Mcomic.data.results.map(list =>{\r\n          //   return list.dates.map((ok)=>{\r\n          //     return {fechas: ok.date, type: ok.type}\r\n          //   })\r\n          // })\r\n          this.setState({dataComic: i});\r\n          // this.setState({fechas_comics: q});\r\n        })\r\n        .catch(err => console.error(\"Ha ocurrido un error con los comics\", err));\r\n      }\r\n\r\n  // Llamado de personajes por cada comic\r\n  async getCharComics(e){\r\n    console.log(e)\r\n    var ts = Date.now();   // Dato de la fecha.\r\n    const privateKey = 'b05d8a26db8acc6f48d50c93824ff00a19c5cb61',     // PrivateKey asignada por la pagina de Mavel\r\n          publicKey = 'f97f541a27560153f37504b1f5078573';              // PrivateKey asignada por la pagina de Mavel\r\n\r\n    const hash = md5(ts+privateKey+publicKey);\r\n      var id = e.value;\r\n      var fechas = e.dates;\r\n      console.log(\"Fechas\", fechas);\r\n      const comic_char = (`http://gateway.marvel.com/v1/public/comics/${id}/characters?ts=${ts}&apikey=${publicKey}&hash=${hash}&limit=100`);\r\n\r\n      await fetch(comic_char)\r\n        .then(res => res.json())\r\n        .then(getChar =>{\r\n          const c = getChar.data.results.map((res)=>{\r\n            return {value: res.id, label: res.name, imagen: res.thumbnail.path+'/portrait_xlarge.jpg', descripcion: res.description}\r\n          })\r\n          this.setState({getComics: c});\r\n          this.setState({fechas_comics: fechas});\r\n        });\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <>\r\n      <div className=\"dropdown\">\r\n            <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n              MARVEL\r\n            </button>\r\n            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n              <a className=\"dropdown-item\" href=\"/heroes\">Heroes</a>\r\n              <a className=\"dropdown-item\" href=\"/personajes\">Personajes</a>\r\n              <a className=\"dropdown-item\" href=\"/comics\">Comics</a>\r\n              <a className=\"dropdown-item\" href=\"/series\">Series</a>\r\n              <a className=\"dropdown-item\" href=\"/fechas\">Fechas</a>\r\n            </div>\r\n          </div>\r\n      <center><h1> COMICS DE MARVEL </h1></center>\r\n        \r\n      <section>\r\n      <Select\r\n          placeholder=\"Lista de comics\"\r\n          onChange={e=>{\r\n            this.getCharComics(e)\r\n          }}\r\n          options={this.state.dataComic}\r\n        />\r\n        \r\n          <div>\r\n            \r\n            <h1> Personajes por comics </h1>\r\n            {this.state.getComics.map((res)=>{\r\n            // this.state.fechas_comics.map((ok)=>{\r\n              return <div className=\"row\">\r\n              <div className=\"col-md-4 mx-auto\">\r\n                  <div className=\"card__\">\r\n                      <div className=\"card-header\">\r\n                              <center className=\"name\"><h1><b>{res.label}</b></h1></center>\r\n                          <div className=\"card-body\">\r\n                              <center><img src={res.imagen} alt=\"...\"/></center>\r\n                              <p>{res.descripcion}</p>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              </div>\r\n            // })\r\n            })}\r\n            {/* <h4> Fechas de salida </h4>\r\n            {this.state.fechas_comics.map((ok)=>{\r\n              return <ul><li>{ok.date}</li></ul>\r\n            })} */}\r\n            </div>\r\n      </section>\r\n        \r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n}","import React, { Component } from \"react\";\r\nimport md5 from 'md5';\r\nimport Select from 'react-select';\r\nrequire('../css/api.css');\r\n\r\n\r\nexport default class Series extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n          seriesM: [],           //Estado de las series\r\n          char_series: [],        //Estado de personajes por series\r\n          comic_series: [],       //Estado de comics por series\r\n        }          \r\n      }\r\n\r\n      componentDidMount(){\r\n          this.series();\r\n      }\r\n  //Llamado de series\r\n  async series(){\r\n    var ts = Date.now();   // Dato de la fecha.\r\n    const privateKey = 'b05d8a26db8acc6f48d50c93824ff00a19c5cb61',     // PrivateKey asignada por la pagina de Mavel\r\n          publicKey = 'f97f541a27560153f37504b1f5078573';              // PrivateKey asignada por la pagina de Mavel\r\n      \r\n    const hash = md5(ts+privateKey+publicKey);\r\n    const seriesapi = (`http://gateway.marvel.com/v1/public/series?ts=${ts}&apikey=${publicKey}&hash=${hash}&limit=20`);\r\n\r\n      await fetch(seriesapi)\r\n        .then(res => res.json())\r\n        .then(series_ => {\r\n          const q = series_.data.results.map(row =>{\r\n            return {value: row.id, label: row.title}\r\n          })\r\n          this.setState({seriesM: q});\r\n        })\r\n        .catch(err => console.error(\"Ha ocurrido un error con los series\", err));\r\n  }\r\n\r\n  //Llamado de personajes por series\r\n  async getCharSeries(o){\r\n    console.log(o);\r\n    var ts = Date.now();   // Dato de la fecha.\r\n    const privateKey = 'b05d8a26db8acc6f48d50c93824ff00a19c5cb61',     // PrivateKey asignada por la pagina de Mavel\r\n          publicKey = 'f97f541a27560153f37504b1f5078573';              // PrivateKey asignada por la pagina de Mavel\r\n      \r\n    const hash = md5(ts+privateKey+publicKey);\r\n      var id = o.value;\r\n      const char_series = (`http://gateway.marvel.com/v1/public/series/${id}/characters?ts=${ts}&apikey=${publicKey}&hash=${hash}&limit=20`);\r\n\r\n            await fetch(char_series)\r\n              .then(res => res.json())\r\n              .then(q =>{\r\n                const i = q.data.results.map((res)=>{\r\n                  return {value: res.id, label: res.name, imagen: res.thumbnail.path+'/portrait_xlarge.jpg', descripcion: res.description}\r\n                })\r\n                this.setState({char_series: i})\r\n              });\r\n  }\r\n\r\n  //Llamado de comics por series\r\n  async comicSeries(p){\r\n    console.log(p);\r\n    var ts = Date.now();   // Dato de la fecha.\r\n    const privateKey = 'b05d8a26db8acc6f48d50c93824ff00a19c5cb61',     // PrivateKey asignada por la pagina de Mavel\r\n          publicKey = 'f97f541a27560153f37504b1f5078573';              // PrivateKey asignada por la pagina de Mavel\r\n      \r\n    const hash = md5(ts+privateKey+publicKey);\r\n      var id = p.value;\r\n      const comicSeriess = (`http://gateway.marvel.com/v1/public/series/${id}/comics?ts=${ts}&apikey=${publicKey}&hash=${hash}&limit=20`);\r\n\r\n            await fetch(comicSeriess)\r\n              .then(res => res.json())\r\n              .then(r =>{\r\n                console.log(\"char\", r.data.results)\r\n                const c = r.data.results.map((res)=>{\r\n                  return {value: res.id, label: res.title, imagen: res.thumbnail.path+'/portrait_xlarge.jpg', descripcion: res.description}\r\n                })\r\n                this.setState({comic_series: c})\r\n              });\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <>\r\n      <center><h1> SERIES DE MARVEL </h1></center>\r\n        <div className=\"dropdown\">\r\n            <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n              MARVEL\r\n            </button>\r\n            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n              <a className=\"dropdown-item\" href=\"/heroes\">Heroes</a>\r\n              <a className=\"dropdown-item\" href=\"/personajes\">Personajes</a>\r\n              <a className=\"dropdown-item\" href=\"/comics\">Comics</a>\r\n              <a className=\"dropdown-item\" href=\"/series\">Series</a>\r\n              <a className=\"dropdown-item\" href=\"/fechas\">Fechas</a>\r\n            </div>\r\n          </div>\r\n      <section>\r\n          <Select\r\n          placeholder=\"Lista de series\"\r\n          onChange={o=>{\r\n            this.getCharSeries(o)\r\n          }}\r\n          options={this.state.seriesM}\r\n          />\r\n          <Select\r\n          placeholder=\"Lista de comics por series\"\r\n          onChange={p=>{\r\n            this.comicSeries(p)\r\n          }}\r\n          options={this.state.seriesM}\r\n          />\r\n        <div>\r\n          <h1> Personajes por series </h1>\r\n          {this.state.char_series.map((res)=>{\r\n            return <div className=\"row\">\r\n            <div className=\"col-md-4 mx-auto\">\r\n                <div className=\"card__\">\r\n                    <div className=\"card-header\">\r\n                            <center className=\"name\"><h1><b>{res.label}</b></h1></center>\r\n                        <div className=\"card-body\">\r\n                            <center><img src={res.imagen} alt=\"...\"/></center>\r\n                            <p>{res.descripcion}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n          })}\r\n          <h1> Comics por series </h1>\r\n          {this.state.comic_series.map((res)=>{\r\n            // return <div><li>{res.label}</li><img src={res.imagen}/></div>\r\n              return <div className=\"row\">\r\n              <div className=\"col-md-4 mx-auto\">\r\n                  <div className=\"card__\">\r\n                      <div className=\"card-header\">\r\n                              <center className=\"name\"><h1><b>{res.label}</b></h1></center>\r\n                          <div className=\"card-body\">\r\n                              <center><img src={res.imagen} alt=\"...\"/></center>\r\n                              <p>{res.descripcion}</p>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              </div>\r\n          })}\r\n        </div>\r\n      </section>\r\n      </>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport md5 from 'md5';\r\n// import Select from 'react-select';\r\nrequire('../css/api.css');\r\n\r\nexport default class fechas extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n          dataComic: [],        //Estado de los comics\r\n          fechas_comics: [],    //Estado de fechas de comics por salir \r\n        }          \r\n    \r\n        this.componentDidMount = this.componentDidMount.bind(this);\r\n        this.comicsMarvel = this.comicsMarvel.bind(this);    \r\n      }\r\n\r\n      componentDidMount(){\r\n          this.comicsMarvel();\r\n    }\r\n\r\n// Llamado de api para los comics\r\ncomicsMarvel(){\r\n    var ts = Date.now();   // Dato de la fecha.\r\n    const privateKey = 'b05d8a26db8acc6f48d50c93824ff00a19c5cb61',     // PrivateKey asignada por la pagina de Mavel\r\n          publicKey = 'f97f541a27560153f37504b1f5078573';              // PrivateKey asignada por la pagina de Mavel\r\n      \r\n    const hash = md5(ts+privateKey+publicKey),\r\n          URL1 = (`http://gateway.marvel.com/v1/public/comics?ts=${ts}&apikey=${publicKey}&hash=${hash}&limit=100`);\r\n\r\n      fetch(URL1)\r\n        .then(res => res.json())\r\n        .then(Mcomic => {\r\n        //   console.log(\"datess\", Mcomic);\r\n          const i = Mcomic.data.results.map(row =>{\r\n            return {value: row.id, label: row.title, dates: row.dates.date, imagen: row.thumbnail.path+'/portrait_xlarge.jpg', descripcion: row.description}\r\n          })\r\n            \r\n          // const q = Mcomic.data.results.map(list =>{\r\n          //   return list.dates.map((ok)=>{\r\n          //     return {fechas: ok.date, type: ok.type}\r\n          //   })\r\n          // })\r\n          // const q = Mcomic.data.results.map(list =>{\r\n          //   if( list.dates.map() > Date.now()){\r\n          //     return {fechas: list.date, type: list.type}\r\n          //   }\r\n          // })\r\n\r\n          this.setState({dataComic: i});\r\n          // this.setState({fechas_comics: q});\r\n        })\r\n        .catch(err => console.error(\"Ha ocurrido un error con los comics\", err));\r\n      }\r\n\r\n  // Llamado de personajes por cada comic\r\n  getCharComics(e){\r\n    console.log(e)\r\n      var fechas = e.dates;\r\n        this.setState({fechas_comics: fechas});\r\n        if(this.state.fechas_comics.date > Date.now()){\r\n          return this.state.fechas_comics\r\n        }\r\n      console.log(\"Fechas\", fechas);\r\n  }\r\n\r\n  render(){\r\n    if(this.state.fechas_comics.dates > Date.now()){\r\n      const r = this.state.dataComic.dates\r\n      console.log(r)\r\n    }\r\n    return(\r\n      <>\r\n      <center><h1> FECHAS DE SALIDA DE COMICS </h1></center>\r\n        <div className=\"dropdown\">\r\n            <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n              MARVEL\r\n            </button>\r\n            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n              <a className=\"dropdown-item\" href=\"/heroes\">Heroes</a>\r\n              <a className=\"dropdown-item\" href=\"/personajes\">Personajes</a>\r\n              <a className=\"dropdown-item\" href=\"/comics\">Comics</a>\r\n              <a className=\"dropdown-item\" href=\"/series\">Series</a>\r\n              <a className=\"dropdown-item\" href=\"/fechas\">Fechas</a>\r\n            </div>\r\n          </div>\r\n      <section>\r\n          <div>\r\n            {this.state.fechas_comics.map((ok)=>{\r\n              return <div className=\"row\">\r\n              <div className=\"col-md-4 mx-auto\">\r\n                  <div className=\"card__\">\r\n                      <div className=\"card-header\">\r\n                              <center className=\"name\"><h1><b>{ok.date}</b></h1></center>\r\n                          <div className=\"card-body\">\r\n                              <center><img src={ok.imagen} alt=\"...\"/></center>\r\n                              <p>{ok.descripcion}</p>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              </div>\r\n            })}\r\n            </div>\r\n      </section>\r\n        \r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n}","import {Component} from 'react';\r\nimport md5 from 'md5';\r\n\r\nexport default class api_marvel extends Component{\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      data: []         //Estado de los personajes\r\n    }          \r\n\r\n    this.Marvel = this.Marvel.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n      this.Marvel();\r\n      \r\n      // this.imagenPersonajes();\r\n  }\r\n\r\n  // Llamado a personajes de la API de Marvel\r\n  async marvel(){\r\n    // // Consumo de API DE MARVEL\r\n    var ts = Date.now();   // Dato de la fecha.\r\n    const privateKey = 'b05d8a26db8acc6f48d50c93824ff00a19c5cb61',     // PrivateKey asignada por la pagina de Mavel\r\n          publicKey = 'f97f541a27560153f37504b1f5078573';             // PrivateKey asignada por la pagina de Mavel\r\n\r\n    // Encriptacion de keys\r\n    const hash = md5(ts+privateKey+publicKey),\r\n          URL = (`http://gateway.marvel.com/v1/public/characters?ts=${ts}&apikey=${publicKey}&hash=${hash}&limit=5`);\r\n\r\n      /* EndPoint MARVEL, configuraciones necesarias para los llamados \r\n        HASH = 2fd6719e46e5238b2a411bc3e541eefd \r\n        ts = 1580325822661\r\n        Public KEY = f97f541a27560153f37504b1f5078573  \r\n        http://gateway.marvel.com/v1/public/characters?ts=1580325822661&apikey=f97f541a27560153f37504b1f5078573&hash=2fd6719e46e5238b2a411bc3e541eefd */\r\n      // console.log(ts);\r\n      // console.log(hash);\r\n      // console.log(URL); */\r\n\r\n      // API de los personajes de Marvel\r\n      await fetch(URL)\r\n        .then(res => res.json())\r\n        .then(datos => {\r\n          const i = datos.data.results.map(row =>{\r\n            return {value: row.id, label: row.name, imagen: row.thumbnail.path+'/portrait_xlarge.jpg', descripcion: row.description}\r\n          })\r\n          this.setState({data: i});\r\n          // console.log(this.state.data)\r\n        })\r\n        .catch(err => console.error(\"Ha ocurrido un error con los characters\", err));  \r\n  }\r\n\r\n\r\n\r\n\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport md5 from 'md5';\r\nimport api_marvel from '../api/marvel';\r\n// import HEROES from '../api/heroes';\r\nexport const ADD_TODO = 'ADD_TODO'\r\nexport const TOGGLE_TODO = 'TOGGLE_TODO'\r\nexport const SET_VISIBILITY_FILTER = 'SET_VISIBILITY_FILTER'\r\n\r\nexport const VisibilityFilters = {\r\n  SHOW_ALL: 'SHOW_ALL',\r\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\r\n  SHOW_ACTIVE: 'SHOW_ACTIVE'\r\n}\r\n\r\nconst MENSAJE = ({personajes, agregarFavorito}) => (\r\n    <section>\r\n        <h1> HOLA MUNDO </h1>\r\n        <div className=\"contenedor-heroes\">\r\n        {\r\n        personajes.map( ok =>(\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4 mx-auto\">\r\n                        <div className=\"card_1\">\r\n                            <div className=\"card-header\">\r\n                                    <center className=\"heroe\"><h1><b>{ok.label}</b></h1></center>\r\n                                <div className=\"card-body\">\r\n                                    <center><img src={ok.imagen} alt=\"...\"/></center>\r\n                                    <p>{ok.descripcion}</p>\r\n                                </div>\r\n                                <button onClick={()=> agregarFavorito(ok)}> FAVORITO </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))\r\n        } \r\n        </div>\r\n    </section>\r\n)\r\n\r\nconst heroes  = (personajes, llamado) =>{\r\n    var ts = Date.now();\r\n    const privateKey = 'b05d8a26db8acc6f48d50c93824ff00a19c5cb61',\r\n          publicKey = 'f97f541a27560153f37504b1f5078573';\r\n\r\n    const hash = md5(ts+privateKey+publicKey);\r\n    const URL = (`http://gateway.marvel.com/v1/public/characters?ts=${ts}&apikey=${publicKey}&hash=${hash}&limit=3`);\r\n\r\n    llamado = fetch(URL).then(res => res.json()).then(datos => {\r\n        const i = datos.data.results.map(row =>{\r\n            return {value: row.id, label: row.name, imagen: row.thumbnail.path+'/portrait_xlarge.jpg', descripcion: row.description}\r\n          })\r\n          personajes = i;\r\n          console.log(\"characters\", i)\r\n    })\r\n}\r\n\r\nexport function characters () {\r\n    return async dispatch => {\r\n        await api_marvel.marvel().then(res => {\r\n            dispatch(res);\r\n        })\r\n    }\r\n}\r\n\r\nexport const Marvel = ()=>{\r\n    heroes()\r\n}\r\n\r\nconsole.log(\"MARVEL\", Marvel)\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    personajes: state.datas\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    agregarFavorito() {\r\n        dispatch({\r\n            type: \"mensaje\", \r\n        })\r\n    }\r\n});\r\n\r\nexport function addTodo(text) {\r\n    return { type: ADD_TODO, text }\r\n}\r\nexport function toggleTodo(index) {\r\n    return { type: TOGGLE_TODO, index }\r\n}\r\nexport function setVisibilityFilter(filter) {\r\n    return { type: SET_VISIBILITY_FILTER, filter }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MENSAJE);","import {createStore} from 'redux'; \r\nimport {characters} from './components/marvel';\r\n// import md5 from 'md5';\r\n// import {Marvel, marvel} from './components/marvel';\r\n\r\n\r\n\r\n// const HEROES = (llamado)=>{\r\n//     var ts = Date.now();\r\n//     const privateKey = 'b05d8a26db8acc6f48d50c93824ff00a19c5cb61',\r\n//           publicKey = 'f97f541a27560153f37504b1f5078573';\r\n\r\n//     const hash = md5(ts+privateKey+publicKey)\r\n//     const URL = (`http://gateway.marvel.com/v1/public/characters?ts=${ts}&apikey=${publicKey}&hash=${hash}&limit=3`);\r\n\r\n//     llamado = fetch(URL).then(res => res.json()).then(datos => {\r\n//          const i = datos.data.results.map(row =>{\r\n//             return {value: row.id, label: row.name, imagen: row.thumbnail.path+'/portrait_xlarge.jpg', descripcion: row.description}\r\n//           })\r\n//           initialState.datas = i;\r\n//           console.log(\"personajes\", i);\r\n//     })\r\n// }\r\n\r\n// const Marvel = ()=>{\r\n//     HEROES()\r\n// }\r\n\r\nconsole.log()\r\n\r\n\r\n\r\nconst initialState = {\r\n    data: [characters],\r\n    datas: []\r\n}\r\n\r\nconst cosas = (state = initialState, action) => {\r\n    console.log(\"store\", state); \r\n    if(action.type === \"mensaje\"){\r\n      return initialState.datas = action.datos\r\n    }\r\n    return state\r\n}\r\n\r\nexport default createStore(cosas);","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n// import store from '../store';\r\n// import HEroes from './heroes';\r\n// import Listas from './listas';\r\nimport Mensaje from './marvel';\r\nimport marvelStore from '../marvelStore';\r\n\r\n\r\nconst App = () =>{\r\n  return (\r\n    <Provider store = {marvelStore}>\r\n      <main>\r\n        {/* <HEroes/> */}\r\n        {/* <Listas/> */}\r\n        <Mensaje/>\r\n      </main>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n ","import React, {Component} from 'react';\r\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom';\r\nimport Home from './api/home.js';\r\n// import Login from './users/Login';\r\n// import Registro from './users/Registro';\r\n// import BLogin from './components/bLogin';\r\n// import BRegistro from './components/bRegistro';\r\nimport Personajes from './api/personajes';\r\n// import Heroes from './api/heroes';\r\nimport Comics from './api/comics';\r\nimport Series from './api/series.js';\r\nimport Fechas from './api/fechas';\r\nimport Vistas from './components/vistas';\r\n\r\nrequire('../src/css/app.css');\r\n\r\n\r\nexport default class App extends Component{\r\n  render(){\r\n  return(\r\n    <>\r\n    <div className=\"barra\">\r\n    <h1><i> API MARVEL </i></h1>\r\n    </div>\r\n    <section>\r\n        <Router>\r\n                    <div>\r\n                        <Link to=\"/\"></Link>\r\n                        {/* <Link to=\"/login\"><BLogin/></Link>\r\n                        <Link to=\"/registro\"><BRegistro/></Link> */}\r\n                        <Link to=\"/personajes\"></Link>\r\n                        <Link to=\"/heroes\"></Link>\r\n                        <Link to=\"/comics\"></Link>\r\n                        <Link to=\"/series\"></Link>\r\n                        <Link to=\"/fechas\"></Link>\r\n                        <Link to=\"/redux\"></Link>\r\n                        <Switch>\r\n                        <Route exact path=\"/\"><Home/></Route>\r\n\r\n                        {/* <Route path=\"/login\">\r\n                            <Login/>\r\n                        </Route>\r\n                        <Route path=\"/registro\">\r\n                            <Registro/>\r\n                        </Route> */}\r\n                        <Route path=\"/heroes\">\r\n                          <Vistas/>\r\n                          {/* <Heroes/> */}\r\n                        </Route>\r\n                        <Route path=\"/personajes\">\r\n                            <Personajes/>\r\n                        </Route>\r\n                        <Route path=\"/comics\">\r\n                          <Comics/>\r\n                        </Route>\r\n                        <Route path=\"/series\">\r\n                          <Series/>\r\n                        </Route>\r\n                        <Route path=\"/fechas\">\r\n                            <Fechas/>\r\n                        </Route>\r\n                        <Route path=\"/redux\">\r\n                        </Route>\r\n                         </Switch> \r\n                         \r\n                    </div>\r\n                </Router>   \r\n    </section>\r\n    </>\r\n  )\r\n}\r\n\r\n}\r\n\r\n","import React from 'react';\r\nimport {render} from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nrender(<App/>, document.getElementById(\"root\"));\r\n\r\n"],"sourceRoot":""}